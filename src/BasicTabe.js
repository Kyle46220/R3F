/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three';
import React, { useEffect, useRef, useState } from 'react';
import { useLoader } from 'react-three-fiber';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';
import { MathUtils } from 'three';
import { useSnapshot } from 'valtio';
import store from './store';
import { useControl } from 'react-three-gui';

export default function Model(props) {
	const group = useRef();
	const front = useRef();
	const back = useRef();
	const left = useRef();
	const right = useRef();
	const { nodes, materials } = useLoader(GLTFLoader, '/BasicTabe.gltf');
	const snap = useSnapshot(store);
	const scale = snap.transforms.scale;
	const [active, setActive] = useState();

	useEffect(() => {
		// store.modelFactors.size = group.current;
		store.modelFactors.backTop = back.current.children[2].geometry.boundingBox.getSize();
		store.modelFactors.backInner = back.current.children[0].geometry.boundingBox.getSize();
		store.modelFactors.backRail = back.current.children[1].geometry.boundingBox.getSize();
		store.modelFactors.leftRail = left.current.children[1].geometry.boundingBox.getSize();
		store.modelFactors.leftInner = left.current.children[0].geometry.boundingBox.getSize();
		store.modelFactors.leftTop = left.current.children[2].geometry.boundingBox.getSize();
		console.log(snap.transforms.colour);
	}, [snap.transforms.scale]);

	return (
		<group
			ref={group}
			rotation-x={MathUtils.degToRad(-90)}
			{...props}
			dispose={null}
		>
			<group
				name={'front'}
				scale-x={scale.x}
				ref={front}
				position-y={snap.functions.getPos(
					snap.modelFactors.leftTop.y,
					scale.z
				)}
			>
				<mesh
					name={'innerF'}
					position-y={
						-snap.functions.getPosOffset(
							200,
							snap.transforms.border
						)
					}
					scale-x={snap.functions.getScaleWithOffset(
						1450,
						200,
						snap.transforms.border
					)}
					material={nodes.Solid12.material}
					geometry={nodes.Solid12.geometry}
				/>
				<mesh
					name={'railF'}
					material={nodes.Solid16.material}
					geometry={nodes.Solid16.geometry}
				/>
				<mesh
					name={'topF'}
					scale-y={snap.transforms.border}
					position-y={snap.functions.getEdge(
						snap.modelFactors.leftTop.y,
						snap.transforms.border
					)}
					material={nodes.Solid19.material}
					geometry={nodes.Solid19.geometry}
				/>
			</group>
			<group
				name={'Back'}
				scale-x={scale.x}
				ref={back}
				position-y={
					-snap.functions.getPos(snap.modelFactors.leftTop.y, scale.z)
				}
			>
				<mesh
					name={'innerB'}
					position-y={snap.functions.getPosOffset(
						200,
						snap.transforms.border
					)}
					scale-x={snap.functions.getScaleWithOffset(
						1450,
						200,
						snap.transforms.border
					)}
					material={nodes.Solid1.material}
					geometry={nodes.Solid1.geometry}
				/>

				<mesh
					name={'railB'}
					material={nodes.Solid14.material}
					geometry={nodes.Solid14.geometry}
				/>

				<mesh
					name={'topB'}
					position-y={
						-snap.functions.getEdge(
							snap.modelFactors.leftTop.y,
							snap.transforms.border
						)
					}
					scale-y={snap.transforms.border}
					material={nodes.Solid111.material}
					geometry={nodes.Solid111.geometry}
				/>
			</group>
			<group
				name="right"
				scale-y={scale.z}
				ref={right}
				position-x={
					-snap.functions.getPos(snap.modelFactors.backTop.x, scale.x)
				}
			>
				<mesh
					position-x={snap.functions.getPosOffset(
						200,
						snap.transforms.border
					)}
					scale-y={snap.functions.getScaleWithOffset(
						1150,
						200,
						snap.transforms.border
					)}
					name={'innerR'}
					material={nodes.Solid13.material}
					geometry={nodes.Solid13.geometry}
				/>
				<mesh
					name={'railR'}
					material={nodes.Solid15.material}
					geometry={nodes.Solid15.geometry}
				/>{' '}
				<mesh
					name={'topR'}
					position-x={
						-snap.functions.getEdge(
							snap.modelFactors.backTop.x,
							snap.transforms.border
						)
					}
					scale-x={snap.transforms.border}
					material={nodes.Solid18.material}
					geometry={nodes.Solid18.geometry}
				/>
			</group>
			<group
				name={'left'}
				scale-y={scale.z}
				ref={left}
				position-x={snap.functions.getPos(
					snap.modelFactors.backTop.x,
					scale.x
				)}
			>
				<mesh
					name={'innerL'}
					position-x={
						-snap.functions.getPosOffset(
							200,
							snap.transforms.border
						)
					}
					scale-y={snap.functions.getScaleWithOffset(
						1150,
						200,
						snap.transforms.border
					)}
					material={nodes.Solid11.material}
					geometry={nodes.Solid11.geometry}
				/>

				<mesh
					name={'railL'}
					material={nodes.Solid17.material}
					geometry={nodes.Solid17.geometry}
				/>

				<mesh
					name={'topL'}
					scale-x={snap.transforms.border}
					position-x={snap.functions.getEdge(
						snap.modelFactors.backTop.x,
						snap.transforms.border
					)}
					material={nodes.Solid110.material}
					geometry={nodes.Solid110.geometry}
				/>
			</group>
			<group name={'XYParts'} scale-x={scale.x} scale-y={scale.z}>
				<mesh
					name={'bot'}
					material={nodes.Solid112.material}
					geometry={nodes.Solid112.geometry}
				>
					<meshStandardMaterial
						// transparent={true}
						// opacity={0.5}
						attach="material"
						color={'#ff66ff'}
					/>
				</mesh>
			</group>
			<group
				visible={active}
				onClick={(e) => setActive(!active)}
				name={'Legs'}
				position={[scale.x, scale.z, scale.y]}
			>
				<mesh
					name={'legFL'}
					position-y={snap.functions.getPos(
						snap.modelFactors.leftTop.y,
						scale.z
					)}
					position-x={snap.functions.getPos(
						snap.modelFactors.backTop.x,
						scale.x
					)}
					material={nodes.Solid2.material}
					geometry={nodes.Solid2.geometry}
				/>
				<mesh
					name={'legFR'}
					position-y={snap.functions.getPos(
						snap.modelFactors.leftTop.y,
						scale.z
					)}
					position-x={
						-snap.functions.getPos(
							snap.modelFactors.backTop.x,
							scale.x
						)
					}
					material={nodes.Solid3.material}
					geometry={nodes.Solid3.geometry}
				/>
				<mesh
					name={'legBL'}
					position-y={
						-snap.functions.getPos(
							snap.modelFactors.leftTop.y,
							scale.z
						)
					}
					position-x={snap.functions.getPos(
						snap.modelFactors.backTop.x,
						scale.x
					)}
					material={nodes.Solid4.material}
					geometry={nodes.Solid4.geometry}
				/>
				<mesh
					name={'legBR'}
					position-y={
						-snap.functions.getPos(
							snap.modelFactors.leftTop.y,
							scale.z
						)
					}
					position-x={
						-snap.functions.getPos(
							snap.modelFactors.backTop.x,
							scale.x
						)
					}
					material={nodes.Solid5.material}
					geometry={nodes.Solid5.geometry}
				/>
			</group>
		</group>
	);
}
