/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef, useEffect, useState } from 'react';
import { useLoader } from 'react-three-fiber';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';
import { useSnapshot } from 'valtio';
import store from './store';
import { Controls, useControl, withControls } from 'react-three-gui';
const getNames = (nodes) => {
	// the below function works perfectly except triggers too many re-renders for some reason.
	Object.entries(nodes).map((i) => {
		const name = i[0];
		store.modelFactors[name] = nodes[name].geometry.boundingBox.getSize();
	});
};

export default function Model(props) {
	const snap = useSnapshot(store);
	const group = useRef();
	const scale = snap.transforms.scale;
	const { nodes, materials } = useLoader(GLTFLoader, '/SolidTabe.gltf');
	const [cover, setCover] = useState(true);
	const [legs, setLegs] = useState(true);

	const toggleLegs = useControl('Toggle Legs', {
		type: 'button',
		onClick: () => setLegs(!legs),
		// state: [
		// 	snap.transforms.legs,
		// 	() => store.transforms.legs(!snap.transforms.legs),
		// ],
	});

	useEffect(() => {
		// getNames(nodes);
		console.log(group);
		group.current.castShadow = true;
		group.current.receiveShadow = true;
		const tableBoundingBox = new THREE.Box3();
		tableBoundingBox.expandByObject(nodes.LegFR);
		tableBoundingBox.expandByObject(nodes.CoverL);
		store.modelFactors.table = tableBoundingBox.getSize();
		console.log(snap.modelFactors);
	}, []);

	useEffect(() => {
		console.log(snap.transforms.legs);
	}, [snap.transforms]);
	return (
		<group ref={group} {...props} dispose={null}>
			<group name={'Front'}>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopCovF3.geometry}
				/>
				<group
					name={'Front Scale'}
					scale-x={scale.x}
					position-z={
						-snap.functions.getPos(
							snap.modelFactors.table.z,
							scale.z
						)
					}
				>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.TopCovF2.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.InnerF.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.RailF.geometry}
					/>
				</group>
			</group>
			<group name={'Back'}>
				<group
					name={'Back Scale'}
					scale-x={scale.x}
					position-z={snap.functions.getPos(
						snap.modelFactors.table.z,
						scale.z
					)}
				>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.TopSetB2.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.TopCovB2.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.InnerB.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.RailB.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.TopSetB2.geometry}
					/>
				</group>
			</group>
			<group name={'Right'}>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopCovR1.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopCovR3.geometry}
				/>
				<group
					name={'Right Scale'}
					scale-z={scale.z}
					position-x={
						-snap.functions.getPos(
							snap.modelFactors.table.x,
							scale.x
						)
					}
				>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.InnerR.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.TopCovR2.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.RailR.geometry}
					/>
				</group>
			</group>
			<group name={'Left'}>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopCovL3.geometry}
				/>
				<group
					name={'Left Scale'}
					scale-z={scale.z}
					position-x={snap.functions.getPos(
						snap.modelFactors.table.x,
						scale.x
					)}
				>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.TopSetL2.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.InnerL.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.TopCovL2.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.RailL.geometry}
					/>
				</group>
			</group>
			<group name={'Overall Scale'} scale-x={scale.x} scale-z={scale.z}>
				<group
					name={'coverTopper'}
					visible={cover}
					onClick={() => setCover(!cover)}
				>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.CoverR.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.CoverML.geometry}
						material-color={'teal'}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.CoverMR.geometry}
					/>
					<mesh
						material={materials.Panel_Beige}
						geometry={nodes.CoverL.geometry}
					/>
					<group name={'twoPieceCover'}>
						<mesh
							material={materials.Panel_Beige}
							geometry={nodes.CoverFillL.geometry}
						/>
						<mesh
							material={materials.Panel_Beige}
							geometry={nodes.CoverFillR.geometry}
						/>
					</group>
					<group name={'threePieceCover'}>
						<mesh
							material={materials.Panel_Beige}
							geometry={nodes.CoverFillC.geometry}
						/>
					</group>
				</group>

				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.InsetTopFill.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.InsetTopR.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.InsetTopL.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.BaseBoard.geometry}
				/>
			</group>
			<group name={'Legs'} visible={false}></group>
			<group
				name={'BackLeftCorner'}
				position-z={snap.functions.getPos(
					snap.modelFactors.table.z,
					scale.z
				)}
				position-x={snap.functions.getPos(
					snap.modelFactors.table.x,
					scale.x
				)}
			>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.BLLegBlock.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.CupBL.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.CupLB.geometry}
				/>
				<mesh
					visible={legs ? true : false}
					material={materials.Panel_Beige}
					geometry={nodes.LegBL.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.SteelLegBL.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopSetL1.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopSetB3.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopCovB3.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopCovL1.geometry}
				/>
			</group>
			<group
				name={'BackRightCorner'}
				position-z={snap.functions.getPos(
					snap.modelFactors.table.z,
					scale.z
				)}
				position-x={
					-snap.functions.getPos(snap.modelFactors.table.x, scale.x)
				}
			>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.BRLegBlock.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.CupBR.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.CupRB.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.LegBR.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.SteelLegBR.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopSetR3.geometry}
				/>

				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopSetB1.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopCovB1.geometry}
				/>
			</group>
			<group
				name={'FrontLeftCorner'}
				position-z={
					-snap.functions.getPos(snap.modelFactors.table.z, scale.z)
				}
				position-x={snap.functions.getPos(
					snap.modelFactors.table.x,
					scale.x
				)}
			>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.FLLegBlock.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.CupLF.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.CupFL.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.LegFL.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.SteelLegFL.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopSetF1.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopSetL3.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopCovF1.geometry}
				/>
			</group>
			<group
				name={'FrontRightCorner'}
				name={'legFR'}
				position-z={
					-snap.functions.getPos(snap.modelFactors.table.z, scale.z)
				}
				position-x={
					-snap.functions.getPos(snap.modelFactors.table.x, scale.x)
				}
			>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopSetF3.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.FRLegBlock.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.CupFR.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.CupRF.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.LegFR.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.SteelLegFR.geometry}
				/>
				<mesh
					material={materials.Panel_Beige}
					geometry={nodes.TopSetR1.geometry}
				/>
			</group>

			<mesh
				material={materials.Panel_Beige}
				geometry={nodes.TopSetF2.geometry}
			/>

			<mesh
				material={materials.Panel_Beige}
				geometry={nodes.TopSetR2.geometry}
			/>
		</group>
	);
}
